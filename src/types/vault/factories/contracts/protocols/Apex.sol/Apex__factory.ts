/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Apex,
  ApexInterface,
} from "../../../../contracts/protocols/Apex.sol/Apex";

const _abi = [
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "SET_DEPOSIT_INFO_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "depositInfos",
    outputs: [
      {
        internalType: "address",
        name: "zkLinkAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "subAccountId",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEVMVault",
        name: "vault",
        type: "address",
      },
    ],
    name: "getVaultValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operatorSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEVMVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "onDeposit",
    outputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEVMVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "onWithdraw",
    outputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositContract",
        type: "address",
      },
    ],
    name: "setDepositContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "zkLinkAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "subAccountId",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "setDepositInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operatorSigner",
        type: "address",
      },
    ],
    name: "updateOperatorSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061192e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063e94ad65b11610066578063e94ad65b14610278578063ee0986341461028b578063f2fde38b1461029e578063f92e6492146102b157600080fd5b80638da5cb5b146101fa5780639566433a1461023e578063c0c53b8b14610252578063ccad973d1461026557600080fd5b8063715018a6116100d3578063715018a61461018f5780637b996e271461019757806380660d51146101aa57806384b0196e146101df57600080fd5b80630ec2e821146100fa5780632bf9518c1461010f5780634c3dd3a414610139575b600080fd5b61010d6101083660046113a3565b6102c4565b005b61012261011d3660046113c7565b6102ee565b604051610130929190611439565b60405180910390f35b61016e6101473660046113a3565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835260ff909116602083015201610130565b61010d61077e565b61010d6101a53660046114f0565b610792565b6101d17f0a38a28ba11e559be62fd811b3f545ce8bd31e17dd8c9a750df6dc5685b40a0381565b604051908152602001610130565b6101e761090e565b60405161013097969594939291906115e9565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b039091168152602001610130565b6101d161024c3660046113a3565b50600090565b61010d61026036600461167f565b6109ba565b6101226102733660046113c7565b610b4b565b600054610226906001600160a01b031681565b61010d6102993660046113a3565b610d1c565b61010d6102ac3660046113a3565b610d46565b600154610226906001600160a01b031681565b6102cc610d84565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60005460609081906001600160a01b03166103505760405162461bcd60e51b815260206004820152601860248201527f4465706f73697420636f6e7472616374206e6f7420736574000000000000000060448201526064015b60405180910390fd5b6000846001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906116ca565b6001600160a01b03868116600090815260026020908152604091829020825180840190935254928316808352600160a01b90930460ff16908201529192506104355760405162461bcd60e51b815260206004820152601460248201527311195c1bdcda5d081a5b999bc81b9bdd081cd95d60621b6044820152606401610347565b60008054604051636eb1769f60e11b81526001600160a01b03898116600483015291821660248201529084169063dd62ed3e90604401602060405180830381865afa158015610488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac91906116e7565b9050858110156106725760408051600280825260608201835290916020830190803683370190505060408051600280825260608201909252919650816020015b60608152602001906001900390816104ec579050509350828560008151811061051757610517611700565b6001600160a01b03928316602091820292909201015260005463095ea7b360e01b91166105448389611716565b6040516001600160a01b0390921660248301526044820152606401604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050846000815181106105a5576105a5611700565b602002602001018190525060008054906101000a90046001600160a01b0316856001815181106105d7576105d7611700565b6001600160a01b0392831660209182029290920181019190915283519084015160405163431542d960e11b9361061c9388938c93919092169190600090602401611737565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050508460018151811061066257610662611700565b6020026020010181905250610774565b604080516001808252818301909252906020808301908036833701905050604080516001808252818301909252919650816020015b60608152602001906001900390816106a75750506000805487519296506001600160a01b0316918791906106dd576106dd611700565b6001600160a01b0392831660209182029290920181019190915283519084015160405163431542d960e11b936107229388938c93919092169190600090602401611737565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050508460008151811061076857610768611700565b60200260200101819052505b5050509250929050565b610786610d84565b6107906000610ddf565b565b8142106107d35760405162461bcd60e51b815260206004820152600f60248201526e111958591b1a5b99481c185cdcd959608a1b6044820152606401610347565b604080517f0a38a28ba11e559be62fd811b3f545ce8bd31e17dd8c9a750df6dc5685b40a0360208201526001600160a01b0380881692820192909252908516606082015260ff8416608082015260a0810183905260009061084c9060c00160405160208183030381529060405280519060200120610e50565b6001549091506001600160a01b03166108658284610e83565b6001600160a01b0316146108af5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610347565b50506040805180820182526001600160a01b03948516815260ff9384166020808301918252968616600090815260029097529190952094518554915194166001600160a81b031990911617600160a01b93909216929092021790915550565b600060608082808083816000805160206118d9833981519152805490915015801561093b57506001810154155b61097f5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610347565b610987610ead565b61098f610f70565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610a005750825b905060008267ffffffffffffffff166001148015610a1d5750303b155b905081158015610a2b575080155b15610a495760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610a7357845460ff60401b1916600160401b1785555b610a7c88610faf565b610acb604051806040016040528060128152602001712830b93a37391020b832bc102432b63832b960711b815250604051806040016040528060038152602001620312e360ec1b815250610fc0565b600180546001600160a01b03808a166001600160a01b03199283161790925560008054928916929091169190911790558315610b4157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6060806000846001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb291906116ca565b6001600160a01b03868116600090815260026020908152604091829020825180840190935254928316808352600160a01b90930460ff1690820152919250610c335760405162461bcd60e51b815260206004820152601460248201527311195c1bdcda5d081a5b999bc81b9bdd081cd95d60621b6044820152606401610347565b604080516001808252818301909252906020808301908036833701905050604080516001808252818301909252919550816020015b6060815260200190600190039081610c685790505092508184600081518110610c9357610c93611700565b6001600160a01b03928316602091820292909201810191909152825160408051918416602483015292891660448201526064808201899052835180830390910181526084909101909252810180516001600160e01b03166323b872dd60e01b17905283518490600090610d0857610d08611700565b602002602001018190525050509250929050565b610d24610d84565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610d4e610d84565b6001600160a01b038116610d7857604051631e4fbdf760e01b815260006004820152602401610347565b610d8181610ddf565b50565b33610db67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146107905760405163118cdaa760e01b8152336004820152602401610347565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000610e7d610e5d610fd6565b8360405161190160f01b8152600281019290925260228201526042902090565b92915050565b600080600080610e938686610fe5565b925092509250610ea38282611032565b5090949350505050565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060916000805160206118d983398151915291610eec90611779565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1890611779565b8015610f655780601f10610f3a57610100808354040283529160200191610f65565b820191906000526020600020905b815481529060010190602001808311610f4857829003601f168201915b505050505091505090565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10380546060916000805160206118d983398151915291610eec90611779565b610fb76110eb565b610d8181611134565b610fc86110eb565b610fd2828261113c565b5050565b6000610fe061119d565b905090565b6000806000835160410361101f5760208401516040850151606086015160001a61101188828585611211565b95509550955050505061102b565b50508151600091506002905b9250925092565b6000826003811115611046576110466117b3565b0361104f575050565b6001826003811115611063576110636117b3565b036110815760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611095576110956117b3565b036110b65760405163fce698f760e01b815260048101829052602401610347565b60038260038111156110ca576110ca6117b3565b03610fd2576040516335e2f38360e21b815260048101829052602401610347565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661079057604051631afcd79f60e31b815260040160405180910390fd5b610d4e6110eb565b6111446110eb565b6000805160206118d98339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10261117e8482611818565b506003810161118d8382611818565b5060008082556001909101555050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111c86112e0565b6111d061134a565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561124c57506000915060039050826112d6565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156112a0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112cc575060009250600191508290506112d6565b9250600091508190505b9450945094915050565b60006000805160206118d9833981519152816112fa610ead565b80519091501561131257805160209091012092915050565b81548015611321579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60006000805160206118d983398151915281611364610f70565b80519091501561137c57805160209091012092915050565b60018201548015611321579392505050565b6001600160a01b0381168114610d8157600080fd5b6000602082840312156113b557600080fd5b81356113c08161138e565b9392505050565b600080604083850312156113da57600080fd5b82356113e58161138e565b946020939093013593505050565b6000815180845260005b81811015611419576020818501810151868301820152016113fd565b506000602082860101526020601f19601f83011685010191505092915050565b604080825283519082018190526000906020906060840190828701845b8281101561147b5781516001600160a01b031684529284019290840190600101611456565b50505083810382850152845180825282820190600581901b8301840187850160005b838110156114cb57601f198684030185526114b98383516113f3565b9487019492509086019060010161149d565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561150857600080fd5b85356115138161138e565b945060208601356115238161138e565b9350604086013560ff8116811461153957600080fd5b925060608601359150608086013567ffffffffffffffff8082111561155d57600080fd5b818801915088601f83011261157157600080fd5b813581811115611583576115836114da565b604051601f8201601f19908116603f011681019083821181831017156115ab576115ab6114da565b816040528281528b60208487010111156115c457600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b60ff60f81b881681526000602060e08184015261160960e084018a6113f3565b838103604085015261161b818a6113f3565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561166d57835183529284019291840191600101611651565b50909c9b505050505050505050505050565b60008060006060848603121561169457600080fd5b833561169f8161138e565b925060208401356116af8161138e565b915060408401356116bf8161138e565b809150509250925092565b6000602082840312156116dc57600080fd5b81516113c08161138e565b6000602082840312156116f957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610e7d57634e487b7160e01b600052601160045260246000fd5b6001600160a01b039590951685526cffffffffffffffffffffffffff939093166020850152604084019190915260ff1660608301521515608082015260a00190565b600181811c9082168061178d57607f821691505b6020821081036117ad57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b601f82111561181357600081815260208120601f850160051c810160208610156117f05750805b601f850160051c820191505b8181101561180f578281556001016117fc565b5050505b505050565b815167ffffffffffffffff811115611832576118326114da565b611846816118408454611779565b846117c9565b602080601f83116001811461187b57600084156118635750858301515b600019600386901b1c1916600185901b17855561180f565b600085815260208120601f198616915b828110156118aa5788860151825594840194600190910190840161188b565b50858210156118c85787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100a26469706673582212203e5638598687ed43db4fe624418475865ab794d4107bafda57755ddd5176711c64736f6c63430008140033";

type ApexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Apex__factory extends ContractFactory {
  constructor(...args: ApexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Apex & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Apex__factory {
    return super.connect(runner) as Apex__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApexInterface {
    return new Interface(_abi) as ApexInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Apex {
    return new Contract(address, _abi, runner) as unknown as Apex;
  }
}
